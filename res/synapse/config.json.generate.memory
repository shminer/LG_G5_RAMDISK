#!/sbin/busybox sh

cat << CTAG
{
    name:{en:"MEMORY", zh_CN:"内存管理"},
    elements:[
		`if [ -f "/sys/kernel/mm/ksm/run" ]; then
		KSM=\`$BB cat /sys/kernel/mm/ksm/run\`
		PTS=\`$BB cat /sys/kernel/mm/ksm/pages_to_scan\`
		SLEEP=\`$BB cat /sys/kernel/mm/ksm/sleep_millisecs\`
		DT=\`$BB cat /sys/kernel/mm/ksm/deferred_timer\`
			$BB echo '{ SPane:{
				title:"Kernel Samepage Merging"
			}},
				{ SCheckBox:{
					label:"Enable",
					description:"KSM lets the hypervisor system share identical memory pages amongst different processes or virtualized guests. This increases CPU consumption but improves memory.",
					default:'$KSM',
					action:"generic /sys/kernel/mm/ksm/run"
				}},
				{ SLiveLabel:{
					title:"KSM Stats:",
					description:"Memory samepage merging is not quick process. So, stats may show 0 MB initially.",
					refresh:3000,
					action:"live KSMStats"
				}},
				{ SCheckBox:{
					label:"Deferred Timer",
					description:"If enabled, KSM thread will not wakeup CPU to carryout activities thus gaining battery while compromising slightly on memory that could have been saved.",
					default:'$DT',
					action:"generic /sys/kernel/mm/ksm/deferred_timer"
				}},
				{ SSeekBar:{
					title:"Pages To Scan",
					unit:" pages",
					step:4,
					min:4,
					max:1024,
					default:'$PTS',
					action:"generic /sys/kernel/mm/ksm/pages_to_scan"
				}},
				{ SSeekBar:{
					title:"Scan Delay Interval",
					unit:" ms",
					step:50,
					min:50,
					max:3000,
					default:'$SLEEP',
					action:"generic /sys/kernel/mm/ksm/sleep_millisecs"
				}},'
		fi`
			{ SButton:{
				label:{en:"Ultra memory cleaner", zh_CN:"终极内存清理"},
				action:"ultra_mem"
			}},
			{ SButton:{
				label:{en:"Drop caches immediately", zh_CN:"立即丢弃缓存"},
				action:"drop_caches"
			}},
			{ SPane:{
				title:{en:"Virtual Memory", zh_CN:"虚拟内存"},
				description:{en:"Tune the operation of the VM subsystem of the Linux kernel and the writeout of dirty data to disk. Swappiness also affects Z-RAM operation on kernels which support swaps.", zh_CN:"虚拟内存是指使用磁盘当作RAM的扩展，这样可用的内存的大小就相应地增大了。内核会将暂时不用的内存块的内容写到硬盘上，当需要用到原始的内容时，它们被重新读入内存。虚拟内存同时也支持跟 Z-RAM 的交换操作."},
			}},
				{ SSeekBar:{
					title:{en:"Dirty Background Ratio", zh_CN:"Dirty 数据后台占用比率"},
					description:{en:"Contains, as a % of total system memory, the number of pages at which the pdflush background writeback daemon will start writing out dirty data.", zh_CN:"当空闲内存低于百分比时，内核必须将 Dirty 数据页面写回磁盘，以便释放内存."},
					unit:"%",
					step:1,
					min:0,
					max:100,
					default:`$BB cat /proc/sys/vm/dirty_background_ratio`,
					action:"generic /proc/sys/vm/dirty_background_ratio"
				}},
				{ SSeekBar:{
					title:{en:"Dirty Ratio", zh_CN:"Dirty 数据比率"},
					description:{en:"Contains, as a % of total system memory, the number of pages at which a process which is generating disk writes will itself start writing out dirty data. Lower the amount of unwritten write cache to reduce lags when a huge write is required.", zh_CN:"当达到设置占用内存的百分比，写入操作会堵塞，直至所有 Dirty 数据写入至文件。值越低未写入缓存越小，当大量的写入操作时可减小卡顿."},
					unit:"%",
					step:1,
					min:0,
					max:100,
					default:`$BB cat /proc/sys/vm/dirty_ratio`,
					action:"generic /proc/sys/vm/dirty_ratio"
				}},
				{ SOptionList:{
					title:{en:"Drop Caches (Clear VFS Cache After Boot)", zh_CN:"丢弃缓存 (启动后清除 VFS 缓存)"},
					description:{en:"This option will force rebuild of file system cache based on actual app usage rather than boot/startup processes. NOTE: This process can take from 1-2 minutes (Enable for better file system read/write performance).", zh_CN:"此操作会在系统引导过程中强制重建应用占用的系统缓存。注意：此操作可能需要 1-2 分钟，开启会带来更好的系统读写性能."},
					default:0,
					action:"dropcaches /res/synapse/files/dropcaches_prof",
					values:{ 0:"Disabled", 1:"Enabled"
					}
				}},
				`if [ -f "/proc/sys/vm/extra_free_kbytes" ]; then
					$BB echo '{ SSeekBar:{
						title:{en:"Extra Free Kilobytes", zh_CN:"额外释放的空间"},
						unit:" kB",
						step:10,
						min:0,
						max:50000,
						default:'\`$BB cat /proc/sys/vm/extra_free_kbytes\`',
						action:"generic /proc/sys/vm/extra_free_kbytes"
					}},'
				fi`
				{ SOptionList:{
					title:{en:"Laptop Mode (Auto FS Writeback Delay Mode)", zh_CN:"笔记本模式（自动文件系统回写延迟模式）"},
					description:{en:"This option will delay the writebacks of file system bits cached in RAM while screen is ON (Enable for better performance @ slight risk of possible data loss if crashed or sudden loss of power).", zh_CN:"此操作在屏幕开启时将内存中的缓存延迟写入到磁盘中（启用会带来更好的性能，但当电源或其他原因造成系统崩溃的时候可能造成数据丢失）."},
					default:`$BB cat /proc/sys/vm/laptop_mode`,
					action:"generic /proc/sys/vm/laptop_mode",
					values:{ 0:"Disabled", 1:"Enabled"
					}
				}},
				{ SSeekBar:{
					title:{en:"Swappiness", zh_CN:"磁盘虚拟内存"},
					description:{en:"Controls the tendency of the kernel to move processes out of physical memory and onto the swap disk. Because disks are much slower than RAM, this can lead to slower response times for system and applications if processes are too aggressively moved out of memory.", zh_CN:"控制物理内存和内置储存器之间的交换趋势。由于内置储存器比内存慢很多，如果交换过于积极，可能会导致系统或应用程序较慢的响应时间."},
					unit:"%",
					step:1,
					min:0,
					max:100,
					default:`$BB cat /proc/sys/vm/swappiness`,
					action:"generic /proc/sys/vm/swappiness"
				}},
				{ SSeekBar:{
					title:{en:"VFS Cache Pressure", zh_CN:"VFS 缓存压力"},
					description:{en:"Controls the tendency of the kernel to reclaim the memory which is used for caching of directory and inode objects. Lower = prefer to retain dentry and inode cache, higher = prefer to reclaim dentry and inodes cache.", zh_CN:"控制回收内存中目录和文件索引等可回收空间的趋势。低 = 倾向保留目录和文件索引信息，高 = 倾向收回的目录和文件索引信息."},
					unit:"%",
					step:1,
					min:1,
					max:150,
					default:`$BB cat /proc/sys/vm/vfs_cache_pressure`,
					action:"generic /proc/sys/vm/vfs_cache_pressure"
				}},
			`if [ -f "/sys/module/lowmemorykiller/parameters/enable_adaptive_lmk" ]; then
				$BB echo '{ SCheckBox:{
						label:{en:"Adaptive LMK", zh_CN:"自适应低内存管理"},
						description:{en:"Adaptive LMK prevents sluggishness and provides very low app launch latency by improving LMK routines.", zh_CN:"自适应LMK功能可以优先防止延迟，加强LMK执行时的效率."},
						default:1,
						action:"generic /sys/module/lowmemorykiller/parameters/enable_adaptive_lmk"
				}},'
			fi`
			`if [ -f "/sys/module/lowmemorykiller/parameters/minfree" ]; then
				$BB echo '{ SPane:{
					title:{en:"Low Memory Killer", zh_CN:"LMK低内存清理"},
					description:{en:"LMK Minfree controls how much memory each app type can hold, and is responsible for memory management for multitasking.", ch_CN:"LMK Minfree 控制每个app可以占用多少内存，并负责多任务内存管理."},
				}},'
					for LMK in 1 2 3 4 5 6; do
						$BB echo '{ SSeekBar:{ '
							case $LMK in
								1)
									$BB echo 'title:{en:"Foreground App", zh_CN:"前台程序"}, description:{en:"The application currenty on the screen and running.", zh_CN:"当前在你所看到的界面上运行的程序."}, default:6' ;;
								2)
									$BB echo 'title:{en:"Visible App", zh_CN:"可见应用"}, description:{en:"The application that is open and running in background.", zh_CN:"在状态栏或者屏幕叠加层上显示的应用."}, default:8' ;;
								3)
									$BB echo 'title:{en:"Secondary Server", zh_CN:"次要服务"}, description:{en:"This is a service an application needs that is alive and ready.", zh_CN:"一些后台随时准备启动的应用服务."}, default:16' ;;
								4)
									$BB echo 'title:{en:"Hidden App",zh_CN:"隐蔽程序"}, description:{en:"An idle process that wakes up on application request.", zh_CN:"等待被唤醒的后台应用."}, default:64' ;;
								5)
									$BB echo 'title:{en:"Content Provider", zh_CN:"内容提供服务"}, description:{en:"Apps that provide data (content) to the system.", zh_CN:"程序之间共享数据接口程序."}, default:112' ;;
								6)
									$BB echo 'title:{en:"Empty App", zh_CN:"空闲程序"}, description:{en:"Apps closed by the user but ready to run.", zh_CN:"被用户关闭的程序，即后台缓存."}, default:124' ;;
							esac
						$BB echo ', action:"lmk '${LMK}'",
						unit:" MB", min:1, max:300 }},'
					done
			fi`
    ]
}
CTAG
